//Приоритет и ассоциативность операторов
//Операторы могут быть левоассоциативными - такие операторы выполняются слева направо и правоассоциативными - выполняются справа налево. Подавляющее большинство операторов левоассоциативны (например, бинарные арифметические операции), поэтому большинство выражений оценивается слева направо. Правоассоциативными операторами являются все унарные операторы, различные операторы присваивания и условный оператор.

//Кроме того, одни операции имеют больший приоритет, чем другие и поэтому выполняются вначале. Операции в порядке уменьшения приоритета:

//++ (инкремент), -- (декремент)
//* (умножение), / (деление), % (остаток от деления)
//+ (сложение), - (вычитание)
//Приоритет операций следует учитывать при выполнении набора арифметических выражений:
int a = 8;
int b = 7;
int c = a + 5 * ++b;      // 48

//Хотя операции выполняются слева направо, но вначале будет выполняться операция инкремента ++b,
//которая увеличит значение переменной b и возвратит его в качестве результата,
//так как эта операция имеет больший приоритет. Затем выполняется умножение 5 * ++b, 
//и только в последнюю очередь выполняется сложение a + 5 * ++b

//Следует учитывать, что если в одной инструкции для одной переменной сразу несколько раз вызываются операции инкремента и декремента, 
//то результат может быть неопределенным, и много зависит от конкретного компилятора.
int count {1};
int result = ++count * 3 + count++ * 5;

//Так, и g++, и clang++ скомпилируют данный код, и результат переменной result будет таким,
// как в принципе и ожидается - 16, но компилятор clang++ также сгенерирует предупреждение.

//Переопределение порядка операций

//Скобки позволяют переопределить порядок вычислений. Например:
#include <iostream>
 
int main()
{
    int a {8};
    int b {7};
    int c {(a + 5) * ++b};      // c = 104
    std::cout << "c = " << c << std::endl;
}
//Несмотря на то, что операция сложения имеет меньший приоритет, но вначале будет выполняться именно сложение,
//а не умножение, так как операция сложения заключена в скобки.


