//Целочисленные типы
//signed char: представляет один символ. Может хранить любой значение из диапазона от -128 до 127
//unsigned char: представляет один символ. Может хранить любой значение из диапазона от 0 до 255
//char: представляет один символ в кодировке ASCII. Может хранить любое значение из диапазона от -128 до 127, либо от 0 до 255
//но при этом char != signed char
//signed short (short) представляет целое число в диапазоне от –32768 до 32767
//unsigned short: представляет целое число в диапазоне от 0 до 65535.
//int: представляет целое число Диапазон предельных значений соответственно также может варьироваться от –32768 до 32767 (при 2 байтах) или от −2 147 483 648 до 2 147 483 647
//unsigned int: представляет положительное целое число. диапазон предельных значений может меняться: от 0 до 65535, либо от 0 до 4 294 967 295
//long: представляет целое число в диапазоне от −2 147 483 648 до 2 147 483 647 или от −9 223 372 036 854 775 808 до +9 223 372 036 854 775 807
// unsigned long: представляет целое число в диапазоне от 0 до 4 294 967 295. 
//long long: представляет целое число в диапазоне от −9 223 372 036 854 775 808 до +9 223 372 036 854 775 807. 
//unsigned long long: представляет целое число в диапазоне от 0 до 18 446 744 073 709 551 615
#include <iostream>
int main()
{
    signed char num1{ -64 };
    unsigned char num2{ 64 };
    short num3{ -88 };
    unsigned short num4{ 88 };
    int num5{ -1024 };
    unsigned int num6{ 1024 };
    long num7{ -2048 };
    unsigned long num8{ 2048 };
    long long num9{ -4096 };
    unsigned long long num10{ 4096 };
    std::cout << "num1 = " << num1 << std::endl;
    std::cout << "num2 = " << num2 << std::endl;
    std::cout << "num3 = " << num3 << std::endl;
    std::cout << "num4 = " << num4 << std::endl;
    std::cout << "num5 = " << num5 << std::endl;
    std::cout << "num6 = " << num6 << std::endl;
    std::cout << "num7 = " << num7 << std::endl;
    std::cout << "num8 = " << num8 << std::endl;
    std::cout << "num9 = " << num9 << std::endl;
    std::cout << "num10 = " << num10 << std::endl;
     bool isAlive {true}; // обьявляем переменные isAlive и isDead, прмсуждаем им значение
    bool isDead {false}; // true и false
    std::cout << "isAlive: " << isAlive << "\n"; //Выводим надпись isAlive и переменную isAlive, которая = 1
    std::cout << "isDead: " << isDead << "\n";  ////Выводим надпись isDead и переменную isDead, которая = 0
    return 0;
}
//Логический тип bool может хранить одно из двух значений: true (истинно, верно) и false (неверно, ложно). 
//При выводе значения типа bool преобразуются в 1 (если true) и 0 (если false).
//По умолчанию значение для данного типа переменных = false

//Если число большое, то при вводе мы можем где-то ошибиться. Чтобы упростить читабельность чисел,
//начиная со стандарта C++14 в язык была добавлена возможность разделения разрядов числа с помощью одинарной кавычки '

#include <iostream>
 
int main()
{
    int num{ 1'234'567'890 };
    std::cout << "num = " << num << "\n";   // num = 1234567890
}

